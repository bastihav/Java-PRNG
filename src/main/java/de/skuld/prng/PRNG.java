package de.skuld.prng;

public interface PRNG {

  /**
   * Fills a byte array containing random bytes generated by this prng
   *
   * @param bytes array to fill
   */
  void nextBytes(byte[] bytes);

  /**
   * Returns the default seed that this PRNG uses in the original implementation. Might be Unix
   * time!
   *
   * @return seed
   */
  long getDefaultSeed();

  /**
   * @return whether the original implementation uses unix time as default seed
   */
  boolean usesUnixTimeAsDefault();

  /**
   * Skips to byteOffset and returns length-many bytes First byte will be byteOffset!
   *
   * @param byteOffset amount of bytes to skip
   */
  byte[] getBytes(long byteOffset, int length);

  ImplementedPRNGs getPRNG();

  int nextInt();

  long nextLong();

  default boolean lowerBitsFirst() {
    return true;
  }
}
